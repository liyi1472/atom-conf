"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const R = require("ramda");
exports.default = (shr, pkg) => {
    if (!R.equals(Object.assign({}, pkg.devDependencies, pkg.dependencies, pkg.optionalDependencies), shr.specifiers)) {
        return false;
    }
    for (const depType of ['optionalDependencies', 'dependencies', 'devDependencies']) {
        const emptyDep = R.isEmpty(R.keys(pkg[depType]));
        if (emptyDep !== R.isEmpty(R.keys(shr[depType])))
            return false;
        if (emptyDep)
            continue;
        const pkgDepNames = depType === 'optionalDependencies'
            ? Object.keys(pkg.optionalDependencies || {})
            : Object.keys(pkg[depType]).filter((depName) => !pkg.optionalDependencies || !pkg.optionalDependencies[depName]);
        if (pkgDepNames.length !== Object.keys(shr[depType]).length &&
            pkgDepNames.length !== countOfNonLinkedDeps(shr[depType])) {
            return false;
        }
        for (const depName of pkgDepNames) {
            if (!shr[depType][depName] || shr.specifiers[depName] !== pkg[depType][depName])
                return false;
        }
    }
    return true;
};
function countOfNonLinkedDeps(shrDeps) {
    return R.values(shrDeps).filter((ref) => ref.indexOf('link:') === -1 && ref.indexOf('file:') === -1).length;
}
//# sourceMappingURL=satisfiesPackageJson.js.map